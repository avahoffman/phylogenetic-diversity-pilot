i=1
j=1
p.df <- data.frame()
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
p.df
j=2
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
p.val
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
dats
p.df
dats
rbind(p.df,dats)
?data.frame
View(phylo.div_SGS)
p.df <- data.frame(1:20,1:10)
p.df
p.df <- data.frame(1:20,0)
p.df
p.df <- data.frame(1:20,0,3)
p.df
p.df <- data.frame(1:20,1:20,1:20)
p.df
for(i in 1:4){
for(j in 1:6){
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
p.df
p.df <- data.frame(0,0,0)
p.df
for(i in 1:4){
for(j in 1:6){
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
p.df
p.df <- setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("bio_type", "metric_type", "p.val"))
for(i in 1:4){
for(j in 1:6){
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
p.df
colnames(p.df)
p.df <- data.frame(0,0,0)
for(i in 1:4){
for(j in 1:6){
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
colnames(p.df) <- c("bio_type","metric_type","p.val")
p.df
p.df <- p.df[-1,]
p.df
merge(mcd_SGS,p.df)
mcd_SGS_pval <- merge(mcd_SGS,p.df)
nrow(mcd_SGS)
nrow(mcd_SGS_pval
)
## plot all diversity metrics and biomass
ggplot(data = mcd_SGS_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_SGS_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
## plot all diversity metrics and biomass
ggplot(data = mcd_SGS_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_SGS_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
1/0.05
100/0.05
0.01/0.05
0.01/0.01
0.001/0.05
## plot all diversity metrics and biomass
ggplot(data = mcd_SGS_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_SGS_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=p.val)) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
## plot all diversity metrics and biomass
ggplot(data = mcd_SGS_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_SGS_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
## plot all diversity metrics and biomass
ggplot(data = mcd_SGS_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_SGS_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggsave(filename="Figures/Biomass_v_Diversity_SGS.jpg",height=14,width=10)
community_KNZ <- read.nexus("/Users/avahoffman/Dropbox/Research/Genetic_Diversity_Pilot/phylogenetic-diversity-pilot/Konza/Cipres_Data/RAxML_bestTree.result")
community_KNZ$edge.length <- round(community_KNZ$edge.length, digits = 3)
community_KNZ.drop <- (subtrees(community_KNZ)[[2]]) # don't want the outgroup
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
#geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=35, fill="darkgreen", alpha=.3) +
geom_hilight(node=43, fill="steelblue", alpha=.3) +
xlim(NA, 0.5)
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=35, fill="darkgreen", alpha=.3) +
geom_hilight(node=43, fill="steelblue", alpha=.3) +
xlim(NA, 0.5)
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
#geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=51, fill="darkgreen", alpha=.3) +
geom_hilight(node=65, fill="steelblue", alpha=.3) +
xlim(NA, 0.5)
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
#geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=51, fill="darkgreen", alpha=.3) +
geom_hilight(node=65, fill="steelblue", alpha=.3) +
xlim(NA, 0.6)
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
#geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=51, fill="darkgreen", alpha=.3) +
geom_hilight(node=65, fill="steelblue", alpha=.3) +
xlim(NA, 0.65)
ggtree(community_KNZ.drop) +
geom_tiplab(size=7) +
#geom_text(aes(label=node), hjust=-1, vjust=0.1) +
geom_text(aes(label=branch.length), hjust=1, vjust=0.1, size=4) +
geom_hilight(node=51, fill="darkgreen", alpha=.3) +
geom_hilight(node=65, fill="steelblue", alpha=.3) +
xlim(NA, 0.68)
ggsave(width=30,height=15, filename="Konza/Distances_toscale.jpg")
ggsave(width=30,height=18, filename="Konza/Distances_toscale.jpg")
KNZ_df <- KNZ
## how many unique species?
print("number of species");length(sort(unique(KNZ_df$species))) ## 49 spp
sort(unique(KNZ_df$species))
clean_KNZ <- data.frame()
for(i in 1:3){
for(j in 1:10){
PlotID <- KNZ_df[(KNZ_df$plot == j),]
PlotID <- PlotID[(PlotID$Block == i),]
PlotID <- PlotID[order(PlotID[,'species'],-PlotID[,'X.cover']),] ## sort so largest percent cover is on top
PlotID <- PlotID[!duplicated(PlotID$species),] ## remove any species duplicated with lower percent cover
print(PlotID)
clean_KNZ <- rbind(clean_KNZ,PlotID)
}
}
write.csv(clean_KNZ, "Clean_spp_comp_KNZ.csv")
clean_KNZ_wide <- clean_KNZ[,-1]
clean_KNZ_wide <- reshape(clean_KNZ_wide, direction = "wide", timevar = "species", idvar = c("Block","plot"))
clean_KNZ_wide[is.na(clean_KNZ_wide)] <- 0
names(clean_KNZ_wide) <- gsub("X.cover.", "", names(clean_KNZ_wide))
clean_KNZ_wide <- clean_KNZ_wide[,-c(1:2)]
rownames(clean_KNZ_wide) <- seq(1,30,1)
clean_KNZ_wide
tree_KNZ <- prune.sample(clean_KNZ_wide,community_KNZ)
phylo.div_KNZ <- pd(clean_KNZ_wide,community_KNZ, include.root = F)
## Shannons + Simpsons's
div_KNZ_Shan <- community_diversity(clean_KNZ, replicate.var = c("plot","Block"), abundance.var = "X.cover", metric = "Shannon")
div_KNZ_Simp <- community_diversity(clean_KNZ, replicate.var = c("plot","Block"), abundance.var = "X.cover", metric = "InverseSimpson")
## Berger Parker
bp.index_KNZ <- diversity(as.matrix(clean_KNZ_wide), type = "berger-parker")
bp.index_KNZ <- bp.index_KNZ[order(as.numeric(row.names(bp.index_KNZ))),]
## evenness
evenness_KNZ_EQ <- community_structure(clean_KNZ, replicate.var = c("plot","Block"), abundance.var = "X.cover", metric = "EQ")
evenness_KNZ_Evar <- community_structure(clean_KNZ, replicate.var = c("plot","Block"), abundance.var = "X.cover", metric = "Evar")
total.div_KNZ <- merge(div_KNZ_Shan,div_KNZ_Simp)
total.div_KNZ <- merge(total.div_KNZ,evenness_KNZ_EQ)
total.div_KNZ <- merge(total.div_KNZ,evenness_KNZ_Evar)
total.div_KNZ <- total.div_KNZ[order(total.div_KNZ$Block,total.div_KNZ$plot),]
total.div_KNZ <- cbind(total.div_KNZ, bp.index_KNZ, phylo.div_KNZ)
rownames(total.div_KNZ) <- seq(1,30,1)
# sanity check = are richness and SR the same
total.div_KNZ[,c("richness","SR")]
#
write.csv(total.div_KNZ, "DIVERSITY_KNZ.csv")
total.div_KN
total.div_KNZ
biomassdata = read.csv("Biomass_data_all.csv",header=TRUE)
biomassdata_KNZ = biomassdata[(biomassdata$Site == "KNZ"),]
phylodata_KNZ = read.csv("DIVERSITY_KNZ.csv",header=TRUE)
phylodata_KNZ
biomassdata = read.csv("Biomass_data_all.csv",header=TRUE)
biomassdata_KNZ = biomassdata[(biomassdata$Site == "KNZ"),]
phylodata_KNZ = read.csv("DIVERSITY_KNZ.csv",header=TRUE)
phylodata_KNZ <- phylodata_KNZ[,-1]
nrow(biomassdata_KNZ)
nrow(phylodata_KNZ)
completedata_KNZ <-  merge(biomassdata_KNZ, phylodata_KNZ)
completedata_KNZ
biomassdata_KNZ
biomassdata = read.csv("Biomass_data_all.csv",header=TRUE)
biomassdata_KNZ = biomassdata[(biomassdata$Site == "KNZ"),]
phylodata_KNZ = read.csv("DIVERSITY_KNZ.csv",header=TRUE)
phylodata_KNZ <- phylodata_KNZ[,-1]
nrow(biomassdata_KNZ)
nrow(phylodata_KNZ)
completedata_KNZ <-  merge(biomassdata_KNZ, phylodata_KNZ)
completedata_KNZ
completedata_KNZ <-  subset(completedata_KNZ, select=-c(BOGR.BOHI,Cactus,total.cactus))
completedata_KNZ$Graminoids <-  completedata_KNZ$Grass + completedata_KNZ$ANGE
completedata_KNZ$Total <- completedata_KNZ$total
df.part_KNZ <- subset(completedata_KNZ, select=c(Block,plot,ANGE,Forbs,Graminoids,Woody,Total,PD,richness,berger.parker.D,Evar,Shannon,InverseSimpson))
mcd_KNZ <- melt(df.part_KNZ, id.vars = c("Block","plot","PD","richness","berger.parker.D","Evar","Shannon","InverseSimpson"))
mcd_KNZ <- melt(mcd_KNZ, id.vars = c("Block","plot","variable","value"))
colnames(mcd_KNZ) <- c("Block","plot","bio_type","biomass","metric_type","metric")
levels(mcd_KNZ$bio_type)
levels(mcd_KNZ$metric_type)
p.df <- data.frame(0,0,0)
for(i in 1:5){
for(j in 1:6){
bt=levels(mcd_KNZ$bio_type)[i]
mt=levels(mcd_KNZ$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_KNZ[ mcd_KNZ$bio_type==bt & mcd_KNZ$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
colnames(p.df) <- c("bio_type","metric_type","p.val")
p.df <- p.df[-1,]
p.df
mcd_KNZ_pval <- merge(mcd_KNZ,p.df)
ggplot(data = mcd_KNZ_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 4)+
geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = mcd_KNZ_pval,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point() +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggsave(filename="Figures/Biomass_v_Diversity_KNZ.jpg",height=17,width=14)
ggsave(filename="Figures/Biomass_v_Diversity_KNZ.jpg",height=15,width=12)
mcd_SGS_pval
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_SGS_pval
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
bothsites
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(color=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 7)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(color=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 7)
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(color=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 6)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(color=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
mcd_KNZ_pval
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(shape=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass")
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
# replace bogr/bohi or ange with 'dominant
mcd_SGS_pval[mcd_SGS_pval == "BOGR.BOHI"] <- "Dominant grass"
mcd_KNZ_pval[mcd_KNZ_pval == "ANGE"] <- "Dominant grass"
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
#geom_smooth(data=subset(mcd_KNZ_pval,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(shape=site)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(shape=site)) +
scale_shape_manual(c(1,5)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(shape=site)) +
scale_shape_manual(values=c(1,5)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val))) +
geom_point(aes(shape=site)) +
scale_shape_manual(values=c(1,19)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val),lty=site)) +
geom_point(aes(shape=site)) +
scale_shape_manual(values=c(1,19)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_point(aes(shape=site)) +
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val),lty=site)) +
scale_shape_manual(values=c(1,19)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggsave(filename="Figures/Biomass_v_Diversity_bothsites.jpg",height=15,width=12)
bothsites
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
# replace bogr/bohi or ange with 'dominant
mcd_SGS_pval[mcd_SGS_pval == "BOGR.BOHI"] <- "Dominant"
mcd_KNZ_pval[mcd_KNZ_pval == "ANGE"] <- "Dominant"
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
bothsites
mcd_SGS_pval[mcd_SGS_pval == "BOGR.BOHI"]
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
# replace bogr/bohi or ange with 'dominant
bothsites[bothsites$bio_type == "BOGR.BOHI"] <- "Dominant"
bothsites[bothsites$bio_type == "ANGE"] <- "Dominant"
bothsites[bothsites == "BOGR.BOHI"]
mcd_SGS_pval
df.part_KNZ <- subset(completedata_KNZ, select=c(Block,plot,ANGE,Forbs,Graminoids,Woody,Total,PD,richness,berger.parker.D,Evar,Shannon,InverseSimpson))
mcd_KNZ <- melt(df.part_KNZ, id.vars = c("Block","plot","PD","richness","berger.parker.D","Evar","Shannon","InverseSimpson"))
mcd_KNZ <- melt(mcd_KNZ, id.vars = c("Block","plot","variable","value"))
colnames(mcd_KNZ) <- c("Block","plot","bio_type","biomass","metric_type","metric")
p.df <- data.frame(0,0,0)
for(i in 1:5){
for(j in 1:6){
bt=levels(mcd_KNZ$bio_type)[i]
mt=levels(mcd_KNZ$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_KNZ[ mcd_KNZ$bio_type==bt & mcd_KNZ$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
colnames(p.df) <- c("bio_type","metric_type","p.val")
p.df <- p.df[-1,]
mcd_KNZ_pval <- merge(mcd_KNZ,p.df)
#just want a subset of variables for plotting
df.part_SGS <- subset(completedata_SGS, select=c(Block,plot,BOGR.BOHI,Forbs,Graminoids,Total,PD,richness,berger.parker.D,Evar,Shannon,InverseSimpson))
mcd_SGS <- melt(df.part_SGS, id.vars = c("Block","plot","PD","richness","berger.parker.D","Evar","Shannon","InverseSimpson"))
mcd_SGS <- melt(mcd_SGS, id.vars = c("Block","plot","variable","value"))
colnames(mcd_SGS) <- c("Block","plot","bio_type","biomass","metric_type","metric")
#calculate p.values
p.df <- data.frame(0,0,0)
for(i in 1:4){
for(j in 1:6){
bt=levels(mcd_SGS$bio_type)[i]
mt=levels(mcd_SGS$metric_type)[j]
p.val=coef(summary(lm(biomass ~ metric, data = mcd_SGS[ mcd_SGS$bio_type==bt & mcd_SGS$metric_type==mt, ])))[2,4]
dats <- c(bt,mt,p.val)
p.df <- rbind(p.df,dats)
}
}
colnames(p.df) <- c("bio_type","metric_type","p.val")
p.df <- p.df[-1,]
mcd_SGS_pval <- merge(mcd_SGS,p.df)
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
bothsites
bothsites$bio_type[bothsites$bio_type == "BOGR.BOHI"]
# replace bogr/bohi or ange with 'dominant
bothsites$bio_type[bothsites$bio_type == "BOGR.BOHI"] <- "Dominant"
bothsites
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- rbind(mcd_SGS_pval,mcd_KNZ_pval)
bothsites$bio_type[bothsites$bio_type == "BOGR.BOHI"]
bothsites$bio_type[(bothsites$bio_type == "BOGR.BOHI"),]
bothsites[bothsites$bio_type == "BOGR.BOHI"]
bothsites[bothsites == "BOGR.BOHI"]
# replace bogr/bohi or ange with 'dominant
bothsites[bothsites == "BOGR.BOHI"] <- "Dominant"
gsub("BOGR.BOHI","Dominant",bothsites$bio_type)
gsub("BOGR.BOHI","Dominant",bothsites)
bothsites <- as.data.frame(rbind(mcd_SGS_pval,mcd_KNZ_pval))
gsub("BOGR.BOHI","Dominant",bothsites)
gsub("BOGR.BOHI","Dominant",bothsites$bio_type)
bothsites[bothsites == "BOGR.BOHI"] <- "Dominant"
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- as.data.frame(rbind(mcd_SGS_pval,mcd_KNZ_pval))
bothsites[bothsites == "BOGR.BOHI"] <- "Dominant"
mcd_SGS_pval$site <- rep("SGS",nrow(mcd_SGS_pval))
mcd_KNZ_pval$site <- rep("KNZ",nrow(mcd_KNZ_pval))
bothsites <- as.data.frame(rbind(mcd_SGS_pval,mcd_KNZ_pval))
# replace bogr/bohi or ange with 'dominant
bothsites$bio_type <- gsub("BOGR.BOHI","Dominant",bothsites$bio_type)
bothsites
bothsites$bio_type <- gsub("ANGE","Dominant",bothsites$bio_type)
ggplot(data = bothsites,
aes(x=metric,y=biomass)) +
facet_wrap(metric_type~bio_type, scales = "free", nrow = 7 , ncol = 5)+
geom_point(aes(shape=site)) +
geom_smooth(data=subset(bothsites,  p.val < 0.05), method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, aes(color=as.numeric(p.val),lty=site)) +
scale_shape_manual(values=c(1,16)) +
theme_classic() +
xlab("Diversity metric") +
ylab("Biomass") +
guides(color=guide_legend(title="p-value"))
ggsave(filename="Figures/Biomass_v_Diversity_bothsites.jpg",height=15,width=12)
